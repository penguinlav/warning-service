worker_processes auto;

pid /run/nginx.pid;

events {
	worker_connections 768;
}
http {
  include    mime.types;
  access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

  map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

  # upstream newserver {
  #   server 127.0.0.1:8080;  # this is new server, by IP address
  # }

  server {
    error_log /var/log/nginx/file.log debug;
    listen 80;
    location / {
      proxy_set_header Host $host;
      proxy_pass http://front.dev:8080;
    }
    


    location /api {
      # proxy_set_header Host $host;
      proxy_pass http://api.run.dev:8000;
    }

    location /sockjs-node {
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;

      proxy_pass http://front.dev:8080; 

      proxy_redirect off;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /socket.io {
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;

      proxy_pass http://api.run.dev:8000; 

      proxy_redirect off;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location ~ /.css {
    add_header  Content-Type    text/css;
    }
    location ~ /.js {
      add_header  Content-Type    application/x-javascript;
    }

    # location /socket.io {
    #   proxy_set_header X-Real-IP $remote_addr;
    #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #   proxy_set_header Host $http_host;
    #   proxy_set_header X-NginX-Proxy true;

    #   proxy_pass http://localhost:8080;
    #   proxy_redirect off;

    #   proxy_http_version 1.1;
    #   proxy_set_header Upgrade $http_upgrade;
    #   proxy_set_header Connection "upgrade";
    # }
  }
}